strategy:
  matrix:
    windows-stable:
      imageName: 'vs2017-win2016'
      rustup_toolchain: stable
      LLVM_VERSION: 5.0.0
    mac-stable:
      imageName: 'macos-10.13'
      rustup_toolchain: stable
      LLVM_VERSION: 5.0.0
    linux-stable:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: stable
      LLVM_VERSION: 5.0.0
    linux-beta:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: beta
      LLVM_VERSION: 5.0.0
    linux-nightly:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: nightly
      LLVM_VERSION: 5.0.0

trigger:
- master

pool:
  vmImage: $(imageName)
steps:
  - checkout: self
    submodules: true
  - script: |
      curl -sSf -o llvm-installer.exe http://releases.llvm.org/%LLVM_VERSION%/LLVM-%LLVM_VERSION%-win64.exe
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: llvm-installer.exe
      destinationFolder: "%USERPROFILE%/llvm-binary"
  - script: |
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\llvm-binary\bin"
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: cargo build --all
    displayName: Cargo build
  - script: cargo test --all
    displayName: Cargo test
